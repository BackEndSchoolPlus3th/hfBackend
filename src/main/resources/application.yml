server:
  port: 8090
spring:
  output:
    ansi:
      enabled: ALWAYS
  profiles:
    active: dev
    include: secret
  datasource:
    url: jdbc:h2:./db_dev;MODE=MySQL
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        default_batch_fetch_size: 100
        show_sql: true
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            scope: profile_nickname, profile_image, account_email
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8090/login/oauth2/code/{registrationId}"    # 리디렉션 URI
            client-name: Kakao    # 클라이언트 이름
          google:
            scope:
              - email
              - profile
            redirect-uri: "http://localhost:8090/login/oauth2/code/{registrationId}"
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me    # 사용자 정보 조회 URI
            user-name-attribute: id    # 사용자 정보에서 사용자 이름에 해당하는 속성


logging:
  level:
    com.ll.hfback: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
custom:
  dev:
    cookieDomain: localhost
    frontUrl: "http://${custom.dev.cookieDomain}:5173"
    backUrl: "http://${custom.dev.cookieDomain}:${server.port}"
  prod:
    cookieDomain: hf.codingtori.site
    frontUrl: "https://www.${custom.prod.cookieDomain}"
    backUrl: "https://api.${custom.prod.cookieDomain}"
  site:
    name: "SITE PROD"
    cookieDomain: "${custom.prod.cookieDomain}"
    frontUrl: "${custom.prod.frontUrl}"
    backUrl: "${custom.prod.backUrl}"
